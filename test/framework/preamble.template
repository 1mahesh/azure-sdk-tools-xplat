<% // This file contains the preamble for mock recordings, as an underscore template
%>// This file has been autogenerated.

var profile = require('../../lib/util/profile');

exports.getMockedProfile = function () {
  var newProfile = new profile.Profile();

  newProfile.addSubscription(new profile.Subscription({
<% Object.keys(sub).forEach(function(key) {
  switch (key) {
    case '_events':
    case 'environment':
    case 'values':
    case 'isDefault':
      // skip these, don't need them
      break;

    case 'managementCertificate':
%>    managementCertificate: {
      key: 'mockedKey',
      cert: 'mockedCert'
    },
<%
      break;
    case 'username':
%>    username: 'user@domain.example',
<%
      break;

    case 'accessToken':
%>    accessToken: {
      accessToken: 'mockedToken',
      refreshToken: 'mockedToken',
      expiresAt: new Date(Date.now() + 24 * 60 * 60 * 1000)
    },
<%
      break;

    case 'registeredProviders':
    case 'registeredResourceNamespaces':
%>    <%= key %>: [<%= sub[key].map(function (k) { return '\'' + k + '\''; }).join(', ') %>],
<%
      break;

    default:
%>    <%= key %>: '<%= sub[key] %>',
<%
      break;
  };
});
%>    isDefault: true
  }, newProfile.environments['<%= sub.environment.name %>']));

  return newProfile;
};

exports.scopes = [